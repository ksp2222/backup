타입 값은 항상 객체로

new car()          -매개변수 없음 기본생성자 자동으로 제공됨

public 클래스명(매개변수) {       -매개변수 있음 - 항상 클래스내에 정의 필요 - 기본생성자도 만들어야함

User[] users = new User[100]; <- 유저배열 100개를 저장할 수 있다

ex)
public Car() {
}

public Car(int price) {
this.price = price; 
}
(바로 위와같은 기본생성자 생성필요)

접근제어자 + 클래스명과 동일하게 <- 기본생성자

처음에 지정하는것은 선언이라고 하고
값을 처음으로 대입(저장)하는것을 초기화라고 한다

클래스명은 항상 대문자로 시작

			int menuSelect sc.nextInt();
			sc.nextLine(); <-엔터값 지우는 명령어
밑으로 엔터값을 지워줘야한다 엔터값을 못지우면 이름을 못지우고 번호만 입력한다



DTO : Data Transfer Object
VO : Value object                      예) 암호를 입력하고 받는것 (DTO, VO) 
Entity
- 데이터전송개체 

new키워드와 생성자를 통해 객체를 만들수있다 <-인스턴스화




